on: [pull_request]

jobs:
  test_lint_release:
    name: 'Test, Lint, Release'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app_feup
    steps: 
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.0.1'

      - name: Cache pub dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ github.ref }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-${{ github.ref }}-

      - run: flutter pub get
      - run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Test
        run: flutter test

      - name: Lint
        run: flutter analyze --no-pub --preamble .

      - name: Download Android keystore
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: key.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Create key.properties
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
      
      - name: Build Android App Bundle
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
        run: flutter build appbundle

      - name: Setup Ruby
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'

      - name: Cache bundle dependencies
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Download bundle dependencies
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
        run: |
          gem install bundler:2.0.2
          bundle config path vendor/bundle
          bundle install

      - name: Release to Google Play (beta)
	if: github.ref == 'refs/heads/develop'
        env:
          SUPPLY_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
          SUPPLY_JSON_KEY_DATA: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
        run: |
          bundle exec fastlane supply \
          --aab build/app/outputs/bundle/release/app-release.aab \
          --track beta

      - name: Release to Google Play (beta)
	if: github.ref == 'refs/heads/develop'
        env:
          SUPPLY_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
          SUPPLY_JSON_KEY_DATA: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
        run: |
          bundle exec fastlane supply \
          --aab build/app/outputs/bundle/release/app-release.aab \
          --track internal


      - name: Release to Google Play
	if: github.ref == 'refs/heads/master'
        env:
          SUPPLY_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
          SUPPLY_JSON_KEY_DATA: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
        run: |
          bundle exec fastlane supply \
          --aab build/app/outputs/bundle/release/app-release.aab \
          --track production

     
